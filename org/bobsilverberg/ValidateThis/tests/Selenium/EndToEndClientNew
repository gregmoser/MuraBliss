package com.example.tests;

import com.thoughtworks.selenium.Selenium;
import org.openqa.selenium.*;
import org.openqa.selenium.htmlunit.*;
import org.openqa.selenium.firefox.*;
import org.openqa.selenium.chrome.*;
import org.openqa.selenium.ie.*;
import org.junit.*;
import static org.junit.Assert.*;

public class EndToEndClientNew {

	WebDriver driver;
	Selenium selenium;

	@Before
	public void startSelenium() {
		driver = new FirefoxDriver();
		selenium = new WebDriverBackedSelenium(driver, "http://localhost/validatethis/tests/selenium/FacadeDemo/index.cfm?init=true");
	}

	@After
	public void stopSelenium() {
		driver.close();
	}

	@Test
	public void testEndToEndClientNew() {
		selenium.open("http://localhost/validatethis/tests/selenium/FacadeDemo/index.cfm?init=true&context=newValidations-client");
		assertEquals("ValidateThis Demo Page", selenium.getTitle());
		selenium.type("UserName", "");
		selenium.type("UserPass", "");
		selenium.click("//button[@type='submit']");
		assertEquals("The Email Address is required.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[1]/p[1]"));
		selenium.type("UserName", "a");
		selenium.click("//button[@type='submit']");
		assertEquals("The Email Address must contain a date between 2010-01-01 and 2011-12-31.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[1]/p[1]"));
		selenium.type("UserName", "2010-02-02");
		selenium.click("//button[@type='submit']");
		assertEquals("The Email Address must be a date in the future. The date entered must come after 2010-12-31.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[1]/p[1]"));
		selenium.type("UserName", "2011-02-02");
		selenium.click("//button[@type='submit']");
		assertEquals("The Email Address must be a date in the past. The date entered must come before 2011-02-01.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[1]/p[1]"));
		selenium.type("UserName", "2011-01-31");
		selenium.click("//button[@type='submit']");
		assertEquals("The Email Address was not found in list: (2011-01-30,2011-01-29).", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[1]/p[1]"));
		selenium.type("UserName", "2011-01-29");
		selenium.click("//button[@type='submit']");
		assertEquals("The Email Address was found in list: (2011-01-29,2011-01-28).", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[1]/p[1]"));
		selenium.type("Nickname", "<input>");
		selenium.click("//button[@type='submit']");
		assertEquals("The Nickname cannot contain HTML tags.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[2]/p[1]"));
		selenium.type("Nickname", "something 2011-01-29 something else");
		selenium.click("//button[@type='submit']");
		assertEquals("The Nickname must not contain the values of properties named: UserName,UserPass.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[2]/p[1]"));
		selenium.type("Nickname", "something thePass something else");
		selenium.type("UserPass", "thePass");
		selenium.click("//button[@type='submit']");
		assertEquals("The Nickname must not contain the values of properties named: UserName,UserPass.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[2]/p[1]"));
		selenium.type("Nickname", "a");
		selenium.click("//button[@type='submit']");
		assertEquals("Did not match the patterns for the Nickname.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[2]/p[1]"));
		selenium.type("Nickname", "aB1");
		selenium.click("//button[@type='submit']");
		assertEquals("Please enter a valid URL.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[2]/p[1]"));
		selenium.type("Nickname", "http://aB1.com");
		selenium.click("//button[@type='submit']");
		assertNotEquals("Please enter a valid URL.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[2]/p[1]"));
		selenium.type("UserPass", "");
		selenium.click("//button[@type='submit']");
		assertEquals("The Password is required.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[3]/p[1]"));
		selenium.type("UserPass", "@");
		selenium.click("//button[@type='submit']");
		assertEquals("The Password must be a valid boolean value.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[3]/p[1]"));
		selenium.type("UserPass", "true");
		selenium.click("//button[@type='submit']");
		assertEquals("The Password must be false.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[3]/p[1]"));
		selenium.type("UserPass", "no");
		selenium.click("//button[@type='submit']");
		assertEquals("The Password must be true.", selenium.getText("//form[@id='frm-Main2']/fieldset[1]/div[3]/p[1]"));
		assertEquals("The Salutation does not match the size requirement.", selenium.getText("//form[@id='frm-Main2']/fieldset[2]/div[1]/p[1]"));
	}

}
